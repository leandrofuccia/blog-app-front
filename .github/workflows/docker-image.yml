name: Deploy Next.js App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Verificar versão do Docker
        run: docker --version
        
      - name: Baixar Docker Compose v2
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -SL https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Criar variável de timestamp
        run: echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV
        
      - name: Excluir cache e node_modules
        run: |
          rm -rf node_modules package-lock.json  
      
      - name: Instalando dependencias
        run: npm install

      - name: Build Next.js application
        run: npm run build

      - name: Verificando container existente do compose djdjddjdjdjdj
        run: docker ps -a | grep blog_app_front && docker rm -f blog_app_front || true
        
      - name: Build da imagem Docker
        run: docker build -t my-blog-app-front.

      - name: Login no Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push da imagem para o Docker Hub
        run: docker push leandrofuccia/blog-app-front:${{ env.TIMESTAMP }}
      
      - name: Adicionar tag latest à imagem
        run: docker tag leandrofuccia/blog-app-front:${{ env.TIMESTAMP }} leandrofuccia/blog-app-front:latest; docker push leandrofuccia/blog-app-front:latest

      - name: Encerra os containers do docker compose
        if: always()
        run: docker compose down       
